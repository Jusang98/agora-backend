openapi: 3.0.0
info:
  version: 1.0.0
  title: Poly World API
  description: SOPT SERVER SEMINAR
  license:
    name: Sangju
servers:
  - url: 3.34.180.83:8080 #자신의 포트번호
components:
  schemas:
    board:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the board generated by MongoDB
          example: "60d5ecb8b3920c55d4c2e1ad"
        title:
          type: string
          description: The title of the board
          example: "My First Board"
        fileUrl:
          type: string
          description: The URL of the file associated with the board
          example: "https://example.com/myfile.jpg"
        content:
          type: string
          description: The content of the board
          example: "Hello, this is my first board!"
        createdAt:
          type: string
          format: date-time
          description: The date and time when the board was created
          example: "2023-07-21T17:32:28Z"
        meta:
          type: object
          properties:
            views:
              type: int
              description: The number of views of the board
              example: 100
            likes:
              type: int
              description: The number of likes of the board
              example: 50
        owner:
          type: string
          description: The unique identifier of the user who owns the board
          example: "60d5ecb8b3920c55d4c2e1ad"
      required:
        - title
        - fileUrl
        - content
        - owner

    user:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's unique email address.
          example: user@example.com
        password:
          type: string
          description: User's password.
          example: my_password
        nickname:
          type: string
          description: User's nickname.
          example: Nick
        houseNum:
          type: int
          description: House number associated with the user.
          example: 1
        verificationCode:
          type: string
          description: User's verification code.
          example: AB12CD34
        verificationCodeExpiration:
          type: string
          format: date-time
          description: Expiration date of the user's verification code.
          example: "2023-07-31T09:00:00Z"
        isVerified:
          type: boolean
          description: Whether the user is verified or not.
          example: false
        friends:
          type: array
          items:
            type: string
          description: List of user's friends.
          example: ["friend1", "friend2"]
        friendsRequests:
          type: array
          items:
            type: string
          description: List of user's friend requests.
          example: ["request1", "request2"]
        boards:
          type: array
          items:
            $ref: "#/components/schemas/board"
          description: List of user's boards.
      required:
        - email
        - password
        - nickname
        - houseNum

#Paths api 경로 지정
paths:
  /board/{userId}/boardlist:
    $ref: "./board.yaml#/~1board~1{userId}~1boardlist"
  /board/{boardId}:
    $ref: "./board.yaml#/~1board~1{boardId}"
  /board:
    $ref: "./board.yaml#/~1board"
  /user:
    $ref: "./user.yaml#/~1user"
  /user/verify:
    $ref: "./user.yaml#/~1user~1verify"
  /user/login:
    $ref: "./user.yaml#/~1user~1login"
  /user/{id}/guestbook:
    $ref: "./user.yaml#/~1user~1{id}~1guestbook"
  /user/{id}/content:
    $ref: "./user.yaml#/~1user~1{id}~1content"
  /user/{id}/guestbooks:
    $ref: "./user.yaml#/~1user~1{id}~1guestbooks"
  /user/sendFriendRequest:
    $ref: "./user.yaml#/~1user~1sendFriendRequest"
  /user/handleFriendRequest:
    $ref: "./user.yaml#/~1user~1handleFriendRequest"
  /user/search:
    $ref: "./user.yaml#/~1user~1search"
  # /user/surfing:
  #   $ref: './user.yaml#/~1user~1surfing'
